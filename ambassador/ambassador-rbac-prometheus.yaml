---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: ambassador-admin
  name: ambassador-admin
spec:
  type: NodePort
  ports:
  - name: ambassador-admin
    port: 8877
    targetPort: 8877
  selector:
    service: ambassador
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: ambassador
rules:
- apiGroups: [""]
  resources:
  - services
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["create", "update", "patch", "get", "list", "watch"]
- apiGroups: [""]
  resources:
  - secrets
  verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ambassador
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: ambassador
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ambassador
subjects:
- kind: ServiceAccount
  name: ambassador
  namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ambassador-statsd-mapping-config
data:
  exporterConfiguration: |
    ---
    # see https://lyft.github.io/envoy/docs/configuration/cluster_manager/cluster_stats.html#config-cluster-manager-cluster-stats
    mappings:
    ### BEGIN General
    - match: envoy.cluster.*.upstream_cx_total
      name: envoy_upstream_cx_total
      labels:
        cluster: "$1"
    - match: envoy.cluster.*.upstream_cx_active
      name: envoy_upstream_cx_active
      labels:
        cluster: "$1"
    - match: envoy.cluster.*.upstream_connect_fail
      name: envoy_upstream_connect_fail
      labels:
        cluster: "$1"
    - match: envoy.cluster.*.membership_healthy
      name: envoy_membership_healthy
      labels:
        cluster: "$1"
    - match: envoy.cluster.*.membership_change
      name: envoy_membership_change
      labels:
        cluster: "$1"
    - match: envoy.cluster.*.membership_total
      name: envoy_membership_total
      labels:
        cluster: "$1"
    ### END General
    ### BEGIN Health check statistics
    - match: envoy.cluster.*.health_check.attempt
      name: envoy_health_check_attempt
      labels:
        cluster: "$1"
    - match: envoy.cluster.*.health_check.success
      name: envoy_health_check_success
      labels:
        cluster: "$1"
    - match: envoy.cluster.*.health_check.failure
      name: envoy_health_check_failure
      labels:
        cluster: "$1"
    - match: envoy.cluster.*.health_check.passive_failure
      name: envoy_health_check_passive_failure
      labels:
        cluster: "$1"
    - match: envoy.cluster.*.health_check.network_failure
      name: envoy_health_check_network_failure
      labels:
        cluster: "$1"
    - match: envoy.cluster.*.health_check.verify_cluster
      name: envoy_health_check_verify_cluster
      labels:
        cluster: "$1"
    - match: envoy.cluster.*.health_check.healthy
      name: envoy_health_check_healthy
      labels:
        cluster: "$1"
    ### END Health check statistics
    ### BEGIN Dynamic HTTP statistics
    - match: envoy.cluster.*.upstream_rq_time
      name: envoy_upstream_rq_time
      labels:
        cluster: "$1"
    - match: envoy.cluster.*.canary.upstream_rq_time
      name: envoy_canary_upstream_rq_time
      labels:
        cluster: "$1"
    - match: envoy.cluster.*.internal.upstream_rq_time
      name: envoy_canary_internal_upstream_rq_time
      labels:
        cluster: "$1"
    - match: envoy.cluster.*.external.upstream_rq_time
      name: envoy_external_upstream_rq_time
      labels:
        cluster: "$1"
    ### END Dynamic HTTP statistics
    ### BEGIN listener
    - match: envoy.listener.*.downstream_cx_length_ms
      name: envoy_listener_downstream_cx_length_ms
      labels:
        listener: $1
    - match: envoy.listener.*.downstream_cx_active
      name: envoy_listener_downstream_cx_active
      labels:
        listener: $1
    - match: envoy.listener.*.downstream_cx_proxy_proto_error
      name: envoy_listener_downstream_cx_proxy_proto_error
      labels:
        listener: $1
    - match: envoy.listener.*.downstream_cx_destroy
      name: envoy_listener_downstream_cx_destroy
      labels:
        listener: $1
    - match: envoy.listener.*.downstream_cx_total
      name: envoy_listener_downstream_cx_total
      labels:
        listener: $1
    - match: envoy.listener.*.*.*.*.downstream_cx_length_ms
      name: envoy_listener_downstream_cx_length_ms
      labels:
        listener: "$1.$2.$3.$4"
    - match: envoy.listener.*.*.*.*.downstream_cx_active
      name: envoy_listener_downstream_cx_active
      labels:
        listener: "$1.$2.$3.$4"
    - match: envoy.listener.*.*.*.*.downstream_cx_proxy_proto_error
      name: envoy_listener_downstream_cx_proxy_proto_error
      labels:
        listener: "$1.$2.$3.$4"
    - match: envoy.listener.*.*.*.*.downstream_cx_destroy
      name: envoy_listener_downstream_cx_destroy
      labels:
        listener: "$1.$2.$3.$4"
    - match: envoy.listener.*.*.*.*.downstream_cx_total
      name: envoy_listener_downstream_cx_total
      labels:
        listener: "$1.$2.$3.$4"
    ### END listener
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ambassador
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        "consul.hashicorp.com/connect-inject": "false"
        "prometheus.io/scrape": "true"
        "prometheus.io/port": "9102"
      labels:
        service: ambassador
    spec:
      serviceAccountName: ambassador
      volumes:
      - name: stats-exporter-mapping-config
        configMap:
          name: ambassador-statsd-mapping-config
          items:
          - key: exporterConfiguration
            path: mapping-config.yaml
      containers:
      - name: ambassador
        image: quay.io/datawire/ambassador:0.51.2
        resources:
          limits:
            cpu: 1
            memory: 400Mi
          requests:
            cpu: 200m
            memory: 100Mi
        env:
        - name: STATSD_ENABLED
          value: "true"          
        - name: STATSD_HOST
          value: "localhost"
        - name: AMBASSADOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: admin
          containerPort: 8877
        livenessProbe:
          httpGet:
            path: /ambassador/v0/check_alive
            port: 8877
          initialDelaySeconds: 30
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /ambassador/v0/check_ready
            port: 8877
          initialDelaySeconds: 30
          periodSeconds: 3
      - name: ambassador-statsd
        image: prom/statsd-exporter:v0.7.0
        ports:
        - name: metrics
          containerPort: 9102
        - name: listener
          containerPort: 8125
        args: ["--statsd.listen-udp=:8125", "--statsd.mapping-config=/statsd-exporter/mapping-config.yaml"]
        volumeMounts:
        - name: stats-exporter-mapping-config
          mountPath: /statsd-exporter/
          readOnly: true
      restartPolicy: Always
